// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/CanDIG/go-model-service/model-vs/api/models"
)

// PostCallCreatedCode is the HTTP code returned for type PostCallCreated
const PostCallCreatedCode int = 201

/*PostCallCreated New call created

swagger:response postCallCreated
*/
type PostCallCreated struct {
	/*

	 */
	Location string `json:"Location"`

	/*
	  In: Body
	*/
	Payload *models.Call `json:"body,omitempty"`
}

// NewPostCallCreated creates PostCallCreated with default headers values
func NewPostCallCreated() *PostCallCreated {

	return &PostCallCreated{}
}

// WithLocation adds the location to the post call created response
func (o *PostCallCreated) WithLocation(location string) *PostCallCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post call created response
func (o *PostCallCreated) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the post call created response
func (o *PostCallCreated) WithPayload(payload *models.Call) *PostCallCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post call created response
func (o *PostCallCreated) SetPayload(payload *models.Call) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCallCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCallMethodNotAllowedCode is the HTTP code returned for type PostCallMethodNotAllowed
const PostCallMethodNotAllowedCode int = 405

/*PostCallMethodNotAllowed Cannot overwrite call

swagger:response postCallMethodNotAllowed
*/
type PostCallMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCallMethodNotAllowed creates PostCallMethodNotAllowed with default headers values
func NewPostCallMethodNotAllowed() *PostCallMethodNotAllowed {

	return &PostCallMethodNotAllowed{}
}

// WithPayload adds the payload to the post call method not allowed response
func (o *PostCallMethodNotAllowed) WithPayload(payload *models.Error) *PostCallMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post call method not allowed response
func (o *PostCallMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCallMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCallInternalServerErrorCode is the HTTP code returned for type PostCallInternalServerError
const PostCallInternalServerErrorCode int = 500

/*PostCallInternalServerError Internal error

swagger:response postCallInternalServerError
*/
type PostCallInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCallInternalServerError creates PostCallInternalServerError with default headers values
func NewPostCallInternalServerError() *PostCallInternalServerError {

	return &PostCallInternalServerError{}
}

// WithPayload adds the payload to the post call internal server error response
func (o *PostCallInternalServerError) WithPayload(payload *models.Error) *PostCallInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post call internal server error response
func (o *PostCallInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCallInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
