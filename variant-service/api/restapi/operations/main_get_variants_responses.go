// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/candig/go-model-service/variant-service/api/models"
)

// MainGetVariantsOKCode is the HTTP code returned for type MainGetVariantsOK
const MainGetVariantsOKCode int = 200

/*MainGetVariantsOK Return variants

swagger:response mainGetVariantsOK
*/
type MainGetVariantsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Variant `json:"body,omitempty"`
}

// NewMainGetVariantsOK creates MainGetVariantsOK with default headers values
func NewMainGetVariantsOK() *MainGetVariantsOK {

	return &MainGetVariantsOK{}
}

// WithPayload adds the payload to the main get variants o k response
func (o *MainGetVariantsOK) WithPayload(payload []*models.Variant) *MainGetVariantsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the main get variants o k response
func (o *MainGetVariantsOK) SetPayload(payload []*models.Variant) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MainGetVariantsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Variant, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// MainGetVariantsInternalServerErrorCode is the HTTP code returned for type MainGetVariantsInternalServerError
const MainGetVariantsInternalServerErrorCode int = 500

/*MainGetVariantsInternalServerError Internal error

swagger:response mainGetVariantsInternalServerError
*/
type MainGetVariantsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMainGetVariantsInternalServerError creates MainGetVariantsInternalServerError with default headers values
func NewMainGetVariantsInternalServerError() *MainGetVariantsInternalServerError {

	return &MainGetVariantsInternalServerError{}
}

// WithPayload adds the payload to the main get variants internal server error response
func (o *MainGetVariantsInternalServerError) WithPayload(payload *models.Error) *MainGetVariantsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the main get variants internal server error response
func (o *MainGetVariantsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MainGetVariantsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
