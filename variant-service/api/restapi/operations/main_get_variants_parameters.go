// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// NewMainGetVariantsParams creates a new MainGetVariantsParams object
// no default values defined in spec.
func NewMainGetVariantsParams() MainGetVariantsParams {

	return MainGetVariantsParams{}
}

// MainGetVariantsParams contains all the bound params for the main get variants operation
// typically these are obtained from a http.Request
//
// swagger:parameters main.get_variants
type MainGetVariantsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Pattern: ^[a-zA-Z0-9]*$
	  In: query
	*/
	Chromosome *string
	/*
	  Minimum: 1
	  In: query
	*/
	End *int64
	/*
	  Minimum: 1
	  In: query
	*/
	Start *int64
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewMainGetVariantsParams() beforehand.
func (o *MainGetVariantsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qChromosome, qhkChromosome, _ := qs.GetOK("chromosome")
	if err := o.bindChromosome(qChromosome, qhkChromosome, route.Formats); err != nil {
		res = append(res, err)
	}

	qEnd, qhkEnd, _ := qs.GetOK("end")
	if err := o.bindEnd(qEnd, qhkEnd, route.Formats); err != nil {
		res = append(res, err)
	}

	qStart, qhkStart, _ := qs.GetOK("start")
	if err := o.bindStart(qStart, qhkStart, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MainGetVariantsParams) bindChromosome(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	o.Chromosome = &raw

	if err := o.validateChromosome(formats); err != nil {
		return err
	}

	return nil
}

func (o *MainGetVariantsParams) validateChromosome(formats strfmt.Registry) error {

	if err := validate.Pattern("chromosome", "query", (*o.Chromosome), `^[a-zA-Z0-9]*$`); err != nil {
		return err
	}

	return nil
}

func (o *MainGetVariantsParams) bindEnd(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("end", "query", "int64", raw)
	}
	o.End = &value

	if err := o.validateEnd(formats); err != nil {
		return err
	}

	return nil
}

func (o *MainGetVariantsParams) validateEnd(formats strfmt.Registry) error {

	if err := validate.MinimumInt("end", "query", int64(*o.End), 1, false); err != nil {
		return err
	}

	return nil
}

func (o *MainGetVariantsParams) bindStart(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("start", "query", "int64", raw)
	}
	o.Start = &value

	if err := o.validateStart(formats); err != nil {
		return err
	}

	return nil
}

func (o *MainGetVariantsParams) validateStart(formats strfmt.Registry) error {

	if err := validate.MinimumInt("start", "query", int64(*o.Start), 1, false); err != nil {
		return err
	}

	return nil
}
