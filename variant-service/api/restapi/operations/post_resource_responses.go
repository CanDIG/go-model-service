// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/CanDIG/go-model-service/variant-service/api/generics/models"
)

// PostResourceCreatedCode is the HTTP code returned for type PostResourceCreated
const PostResourceCreatedCode int = 201

/*PostResourceCreated New resource created

swagger:response postResourceCreated
*/
type PostResourceCreated struct {
	/*

	 */
	Location string `json:"Location"`

	/*
	  In: Body
	*/
	Payload *models.Resource `json:"body,omitempty"`
}

// NewPostResourceCreated creates PostResourceCreated with default headers values
func NewPostResourceCreated() *PostResourceCreated {

	return &PostResourceCreated{}
}

// WithLocation adds the location to the post resource created response
func (o *PostResourceCreated) WithLocation(location string) *PostResourceCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post resource created response
func (o *PostResourceCreated) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the post resource created response
func (o *PostResourceCreated) WithPayload(payload *models.Resource) *PostResourceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post resource created response
func (o *PostResourceCreated) SetPayload(payload *models.Resource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostResourceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostResourceMethodNotAllowedCode is the HTTP code returned for type PostResourceMethodNotAllowed
const PostResourceMethodNotAllowedCode int = 405

/*PostResourceMethodNotAllowed Forbidden to overwrite resource in post

swagger:response postResourceMethodNotAllowed
*/
type PostResourceMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostResourceMethodNotAllowed creates PostResourceMethodNotAllowed with default headers values
func NewPostResourceMethodNotAllowed() *PostResourceMethodNotAllowed {

	return &PostResourceMethodNotAllowed{}
}

// WithPayload adds the payload to the post resource method not allowed response
func (o *PostResourceMethodNotAllowed) WithPayload(payload *models.Error) *PostResourceMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post resource method not allowed response
func (o *PostResourceMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostResourceMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostResourceInternalServerErrorCode is the HTTP code returned for type PostResourceInternalServerError
const PostResourceInternalServerErrorCode int = 500

/*PostResourceInternalServerError Internal error - Resource not created

swagger:response postResourceInternalServerError
*/
type PostResourceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostResourceInternalServerError creates PostResourceInternalServerError with default headers values
func NewPostResourceInternalServerError() *PostResourceInternalServerError {

	return &PostResourceInternalServerError{}
}

// WithPayload adds the payload to the post resource internal server error response
func (o *PostResourceInternalServerError) WithPayload(payload *models.Error) *PostResourceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post resource internal server error response
func (o *PostResourceInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostResourceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
